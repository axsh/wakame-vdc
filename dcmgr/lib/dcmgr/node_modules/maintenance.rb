# -*- coding: utf-8 -*-
module Dcmgr::NodeModules
  class Maintenance < Isono::NodeModules::Base
    include Dcmgr::Logger

    initialize_hook do
      @thread_pool = Isono::ThreadPool.new(1, 'Maintenance')
      @thread_pool.pass {
        myinstance.dup.expire_ip_handles
      }

      @maintenace = EventMachine::PeriodicTimer.new(60) {
        next if @thread_pool.queue.size > 0
        @thread_pool.pass {
          myinstance.dup.expire_ip_handles
        }
      }
    end

    terminate_hook do
      @maintenace.cancel
      @thread_pool.shutdown
    end

    def expire_ip_handles
      # logger.debug "Checking for expired IP handles."

      Dcmgr::Models::IpHandle.dataset.not_leased.expired.alives.each { |handle|
        logger.debug "IP handle expired: uuid:#{handle.canonical_uuid} network:#{handle.ip_lease.network.canonical_uuid} ipv4:#{handle.ip_lease.ipv4_s}"

        handle.destroy
      }
    end

  end

end

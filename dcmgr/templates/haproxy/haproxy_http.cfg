global
    chroot      /var/lib/haproxy
    pidfile     /var/run/haproxy.pid
    maxconn     4000
    user        haproxy
    group       haproxy
    daemon
    #log         127.0.0.1 local0 debug
    #stats socket /var/lib/haproxy/stats

defaults
    mode                    http
    balance                 leastconn
    option                  http-server-close
    option                  forwardfor       except 127.0.0.0/8
    retries                 3
    timeout http-request    10s
    timeout queue           1m
    timeout connect         10s
    timeout client          1m
    timeout server          1m
    timeout http-keep-alive 10s
    timeout check           100m
    #stats enable
    #stats hide-version
    #stats scope .
    #stats realm Haproxy\ Statistics
    #stats uri /haproxy?stats
    #stats auth wakame:wakame

listen <%= @listen[:name] %>
    bind       <%= @listen[:bind].join(',') %>
    balance    <%= @listen[:balance_algorithm] %>
    <% @listen[:acl].each do |acl| %>
    acl <%= acl -%>
    <% end -%>
    <% @listen[:reqadd].each do |reqadd| %>
    reqadd <%= reqadd -%>
    <% end -%>

    option     httpclose
    option     redispatch
    <% if @listen[:httpchk_path] %>
    option     httpchk GET <%= @listen[:httpchk_path] %> HTTP/1.1\r\nHost:\ www
    <% end -%>
    <% if (@listen.include? :appsession) && (!@listen[:appsession][:cookie].empty?) %>
    cookie <%= @listen[:appsession][:cookie] -%> insert nocache indirect
    appsession <%= @listen[:appsession][:cookie] -%> len <%= @listen[:appsession][:length] -%> timeout <%= @listen[:appsession][:holdtime] %> request-learn prefix path-parameters
    <% end %>
    <% @listen[:servers].each do |address, s| %>
    server     <%= s[:name] -%> <%= s[:address] -%>:<%= s[:port] -%> <% if s[:backup] %> backup <% end %> check cookie <%= s[:cookie] -%> maxconn <%= s[:maxconn] -%>
    <% end -%>

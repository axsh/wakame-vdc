#!/usr/bin/env ruby
# -*- coding: utf-8 -*-

$LOAD_PATH.unshift File.expand_path('../../lib', __FILE__)

require 'dcmgr/rubygems'
require 'dcmgr'
require 'isono'

include Isono::Runner::RpcServer

path = ['/etc/wakame-vdc/hva.conf', File.expand_path('config/hva.conf', Dcmgr::DCMGR_ROOT)].find { |i| File.exists?(i) }
abort("ERROR: Failed to load hva.conf") if path.nil?

begin
  Dcmgr.instance_eval {
    @conf = Dcmgr::Configurations::Hva.load(path)
  }
rescue NoMethodError => e
  abort("Syntax Error: #{path}\n  #{e.backtrace.first} #{e.message}")
rescue Dcmgr::Configuration::ValidationError => e
  abort("Validation Error: #{path}\n  " +
        e.errors.join("\n  ")
        )
end

manifest = DEFAULT_MANIFEST.dup
manifest.instance_eval do
  node_name 'hva'
  node_instance_id "#{Isono::Util.default_gw_ipaddr}"

  load_module Isono::NodeModules::NodeHeartbeat
  load_module Dcmgr::NodeModules::InstanceMonitor
  case Dcmgr.conf.edge_networking
  when 'openflow'
    load_module Dcmgr::NodeModules::DebugOpenFlow
    load_module Dcmgr::NodeModules::ServiceOpenFlow
  when 'off'
    # Don't load openflow nor netfilter
  when 'netfilter'
    load_module Dcmgr::NodeModules::ServiceNetfilter
  else
    raise "Configuration error: '#{Dcmgr.conf.edge_networking}' is not a valid option for edge_networking. Valid options are 'openflow', 'netfilter', 'legacy_netfilter' and 'off'"
  end
end

Isono.at_disconnected do
  EM.stop { exit }
end

start(manifest) do
  endpoint "hva-handle.#{@node.node_id}", Dcmgr::Rpc::HvaHandler
  endpoint "local-store-handle.#{@node.node_id}", Dcmgr::Rpc::LocalStoreHandler
end

#!/usr/bin/env ruby
# -*- coding: utf-8 -*-
#

$LOAD_PATH.unshift File.expand_path('../../lib', __FILE__)

require 'dcmgr/rubygems'
require 'dcmgr'
require 'isono'

require 'erb'
require 'eventmachine'
require 'ipaddress'

class MonitoringGateway < Isono::NodeModules::Base
  include Dcmgr::Logger

  initialize_hook do
    event = Isono::NodeModules::EventChannel.new(node)

    event.subscribe('hva/instance_started', '#') do |args|
      logger.info("refresh on instance_started: #{args.inspect}")
      myinstance.refresh_monitoring_configuration(args[0])
    end

    event.subscribe('hva/instance_terminated', '#') do |args|
      logger.info("refresh on instance_terminated: #{args.inspect}")
      myinstance.refresh_monitoring_configuration(args[0])
    end
  end

  def refresh_monitoring_configuration(instance_uuid)
    logger.info(instance_uuid);
  end
end

include Isono::Runner::RpcServer

Dcmgr.load_conf(Dcmgr::Configurations::Nwmongw,
                ['/etc/wakame-vdc/nwmongw.conf',
                 File.expand_path('config/nwmongw.conf', Dcmgr::DCMGR_ROOT)
                ])

Dcmgr.run_initializers('sequel')

manifest = DEFAULT_MANIFEST.dup
manifest.instance_eval do
  node_name 'nwmongw'
  load_module Isono::NodeModules::NodeHeartbeat
  load_module MonitoringGateway
end

start(manifest) do
end

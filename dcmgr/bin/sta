#!/usr/bin/env ruby
# -*- coding: utf-8 -*-

$LOAD_PATH.unshift File.expand_path('../../lib', __FILE__)

require 'dcmgr/rubygems'
require 'dcmgr'
require 'isono'
require 'fuguta'
require 'socket'

include Isono::Runner::RpcServer

path = [ENV['CONF_PATH'].to_s, '/etc/wakame-vdc/sta.conf', File.expand_path('config/sta.conf', Dcmgr::DCMGR_ROOT)].find { |i| File.exists?(i) }
abort("ERROR: Failed to load sta.conf") if path.nil?

begin
  Dcmgr.instance_eval {
    @conf = Dcmgr::Configurations::Sta.load(path)
  }
rescue NoMethodError => e
  abort("Syntax Error: #{path}\n  #{e.backtrace.first} #{e.message}")
rescue Fuguta::Configuration::ValidationError => e
  abort("Validation Error: #{path}\n  " +
        e.errors.join("\n  ")
        )
end
Dcmgr.run_initializers('logger')

manifest = Isono::Runner::RpcServer::DEFAULT_MANIFEST.dup
manifest.instance_eval do
  node_name 'sta'
  node_instance_id "#{Socket.gethostname}"

  load_module Isono::NodeModules::NodeHeartbeat
end

Isono.at_disconnected do
  EM.stop { exit }
end

start(manifest) do
  endpoint "sta-handle.#{@node.node_id}", Dcmgr::Rpc::StaHandler
end

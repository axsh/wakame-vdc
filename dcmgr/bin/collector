#!/usr/bin/env ruby
# -*- coding: utf-8 -*-

$LOAD_PATH.unshift File.expand_path('../../lib', __FILE__)

require 'dcmgr/rubygems'
require 'dcmgr'
require 'isono'

Dcmgr.load_conf(Dcmgr::Configurations::Dcmgr,
                [ENV['CONF_PATH'].to_s,
                 '/etc/wakame-vdc/dcmgr.conf',
                 File.expand_path('config/dcmgr.conf', Dcmgr::DCMGR_ROOT)
                ])

Dcmgr.run_initializers('logger', 'sequel', 'isono_messaging', 'sequel_class_method_hook')

manifest = Isono::Runner::RpcServer::DEFAULT_MANIFEST.dup
manifest.instance_eval do
  node_name 'collector'
  node_instance_id 'master'

  load_module Isono::NodeModules::DataStore
  load_module Isono::NodeModules::NodeCollector
  load_module Isono::NodeModules::JobCollector
  load_module Dcmgr::NodeModules::HvaCollector
  load_module Dcmgr::NodeModules::StaCollector
  load_module Dcmgr::NodeModules::NatboxCollector
  load_module Dcmgr::NodeModules::AlarmCollector
  load_module Dcmgr::NodeModules::InstanceHA
  load_module Dcmgr::NodeModules::Scheduler
  load_module Dcmgr::NodeModules::Maintenance
  load_module Dcmgr::NodeModules::EventHook
  load_module Dcmgr::NodeModules::JobQueueProxy
  load_module Dcmgr::NodeModules::ResourceCollector
end

Isono.at_disconnected do
  EM.stop { exit }
end

Isono::Runner::RpcServer.start(manifest)

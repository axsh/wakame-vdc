#------------------------
# Configuration file for hva.
#------------------------

# directory to store VM local data.
config.vm_data_dir = '/var/lib/wakame-vdc/instances'

# Decides what kind of edge networking will be used. If omitted, the default 'netfilter' option will be used
# * 'netfilter'
# * 'legacy_netfilter' #no longer supported, has issues with multiple vnic vm isolation
# * 'openflow' #experimental, requires additional setup
# * 'off'
config.edge_networking = 'netfilter'

# netfilter and openflow
config.enable_ebtables = true
config.enable_iptables = true
config.enable_subnet = false
config.enable_gre = true

# display netfitler commands
config.verbose_netfilter = false
config.verbose_openflow  = false

# netfilter log output flag
config.packet_drop_log = false

# debug netfilter
config.debug_iptables = false
config.verbose_netfilter_cache = false

# Dump iptables/ebtables to hva.log
# config.netfilter_hook_script_path = File.join(File.expand_path('../../script', __FILE__), 'netfilter-dump.sh')

# Use ipset for netfilter
config.use_ipset       = false

# logging service for inside instance.
config.use_logging_service = false
config.logging_service_ip = '169.254.169.253'
config.logging_service_host_ip = '127.0.0.2'
config.logging_service_port = 8888
config.logging_service_conf = '/var/lib/wakame-vdc/fluent.conf'
config.logging_service_reload = '/etc/init.d/td-agent reload'

# Path for brctl
config.brctl_path = '/usr/sbin/brctl'

# Directory used by Open vSwitch daemon for run files
config.ovs_run_dir = '/var/lib/wakame-vdc/ovs/var/run/openvswitch'

# Path for ovs-ofctl
config.ovs_ofctl_path = '/var/lib/wakame-vdc/ovs/bin/ovs-ofctl'

# Trema base directory
config.trema_dir = '/var/lib/wakame-vdc/trema'
config.trema_tmp = '/var/lib/wakame-vdc/tmp/trema'

dc_network('public') {
  bridge_type 'linux'
  interface 'eth0'
  bridge 'br0'
}

dc_network('null1') {
  bridge_type 'linux'
  interface 'eth0'
  bridge 'br0'
}

dc_network('null2') {
  bridge_type 'linux'
  interface 'eth0'
  bridge 'br0'
}

dc_network('management') {
  bridge_type 'linux'
  interface 'eth1'
  bridge 'br1'
}

# Hypervisor driver specific section.
#hypervisor_driver('openvz') {
#  cgroup_blkio {
#    enable_throttling true
#    read_iops 200
#    write_iops 200
#  }
#}

# Dolphin server connection uri
config.dolphin_server_uri = "http://localhost:9004/"

# Setup of a capture interval.
# By the default, the capture interval is set 60. (cpu_time, memory_time)
# The response timeout use timeout_sec.
# also, the retry count is set to retry_count.
capture {
  cpu_time 60
  memory_time 60
  timeout_sec 10
  retry_count 1
}
